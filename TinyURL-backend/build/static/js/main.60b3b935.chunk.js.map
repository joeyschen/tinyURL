{"version":3,"sources":["pages/Home.js","pages/TinyURL/TinyUrl.js","pages/TinyURL/Details.js","pages/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","to","TinyUrl","props","useState","name","setName","shortLink","setShortLink","origLink","setOrigLink","onSubmit","e","preventDefault","history","tinyURL","console","log","axios","post","then","result","push","data","id","catch","err","className","type","value","onChange","target","Details","match","setTinyURL","error","setError","loading","setLoading","useEffect","get","params","response","NotFoundPage","App","path","component","exact","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60b3b935.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const Home= () => (\n    <>\n    <h1>Hello, Welcome to Joey's Website</h1>\n    <p>I'll be featuring personal projects that I'm currently working on in the MERN stack.</p>\n\n    <p>Done are the following:</p>\n    <ul>\n        <li><Link to =\"/tiny-url\">Tiny URL</Link></li>\n    </ul>\n    \n    </>\n);","import react, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nexport const TinyUrl = (props) => {\n\n    const [name, setName] = useState(\"\");\n    const [shortLink, setShortLink] = useState(\"\");\n    const [origLink, setOrigLink] = useState(\"\");\n\n    let onSubmit = (e) => {\n        e.preventDefault();\n    \n        const {history} = props;\n    \n        let tinyURL = {\n            name: name,\n            shortLink: shortLink,\n            origLink: origLink\n        };\n\n        console.log(tinyURL);\n    \n        axios.post(\"http://localhost:4000/api/newURL\", tinyURL).then(result => {\n            history.push(`/tiny-url/details/${result.data.id}`);\n        }).catch(err => console.log(err));\n    }\n    \n    return(\n        <div>\n            <h3>Add New Student</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label>Name:  </label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        value={name}\n                        onChange={ e => setName(e.target.value) }\n                        />\n                </div>\n                <div className=\"form-group\">\n                    <label>Short Link: </label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\"\n                        value={shortLink}\n                        onChange={ e => setShortLink(e.target.value) }\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Original Link  </label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        value={origLink}\n                        onChange={e => setOrigLink(e.target.value) }\n                        />\n                </div>\n                \n                \n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"+Create TinyURL\" className=\"btn btn-primary\"/>\n                </div>\n            </form>\n        </div>\n    )\n\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\n\nexport const Details = ({match}) => {\n    const [tinyURL, setTinyURL] = useState([]);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n\n        // const {match: {params}} = this.props;\n        \n        axios.get(`http://localhost:4000/api/newURL/${match.params.id}`).then(result => {\n          const response = result.data;\n          console.log(response);\n          setTinyURL(response);\n          setLoading(false);\n      }).catch(err => {\n          setError(true);\n          setLoading(false);\n      });\n    }, []);\n\n    return (\n        loading ? <div>Loading...</div> : error ? <div>Error occured.</div> : \n\n        <div>\n            <p>Name: {tinyURL.name} </p>\n            <p>Short Link: {tinyURL.shortLink}</p>\n            <p>Original Link: {tinyURL.origLink}</p>\n        </div>\n    );\n}","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);\n\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {Home} from './pages/Home';\nimport {TinyUrl} from './pages/TinyURL/TinyUrl';\nimport {Details} from './pages/TinyURL/Details';\nimport NotFoundPage from './pages/NotFoundPage';\n// import NavBar from './NavBar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {/* <NavBar /> */}\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/tiny-url\" component={TinyUrl} exact />\n              <Route path=\"/tiny-url/details/:id\" component={Details} exact />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}